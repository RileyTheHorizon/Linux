1. Запуск nginx на нестандартном порту 3-мя разными способами 

Для начала проверим, что в ОС отключен файервол
[root@selinux ~]# systemctl status firewalld
○ firewalld.service - firewalld - dynamic firewall daemon
     Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; preset: enabled)
     Active: inactive (dead)
       Docs: man:firewalld(1)
Также можно проверить, что конфигурация nginx настроена без ошибок
[root@selinux ~]# nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
Далее проверим режим работы SELinux
[root@selinux ~]# getenforce
Enforcing
Разрешим в SELinux работу nginx на порту TCP 4881 c помощью переключателей setsebool
Находим в логах (/var/log/audit/audit.log) информацию о блокировании порта
Копируем время, в которое был записан этот лог, и, с помощью утилиты audit2why смотрим 	 

[root@selinux audit]# [root@selinux audit]# grep 1755893146.539:901 audit.log
type=AVC msg=audit(1755893146.539:901): avc:  denied  { name_bind } for  pid=9327 comm="nginx" src=4881 scontext=system_u:system_r:httpd_t:s0 tcontext=system_u:object_r:unreserved_port_t:s0 tclass=tcp_socket permissive=0
type=SYSCALL msg=audit(1755893146.539:901): arch=c000003e syscall=49 success=no exit=-13 a0=6 a1=5613a2bc16b0 a2=10 a3=7fff6adcbe70 items=0 ppid=1 pid=9327 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm="nginx" exe="/usr/sbin/nginx" subj=system_u:system_r:httpd_t:s0 key=(null)ARCH=x86_64 SYSCALL=bind AUID="unset" UID="root" GID="root" EUID="root" SUID="root" FSUID="root" EGID="root" SGID="root" FSGID="root"
type=PROCTITLE msg=audit(1755893146.539:901): proctitle=2F7573722F7362696E2F6E67696E78002D74
[root@selinux audit]# grep 1755893146.539:901 audit.log| audit2why
type=AVC msg=audit(1755893146.539:901): avc:  denied  { name_bind } for  pid=9327 comm="nginx" src=4881 scontext=system_u:system_r:httpd_t:s0 tcontext=system_u:object_r:unreserved_port_t:s0 tclass=tcp_socket permissive=0

        Was caused by:
        The boolean nis_enabled was set incorrectly.
        Description:
        Allow nis to enabled

        Allow access by executing:
        # setsebool -P nis_enabled 1
Утилита audit2why покажет почему трафик блокируется. Исходя из вывода утилиты, мы видим, что нам нужно поменять параметр nis_enabled. 
Включим параметр nis_enabled и перезапустим nginx:

[root@selinux audit]# setsebool -P nis_enabled on
[root@selinux audit]# systemctl restart nginx
[root@selinux audit]# systemctl status nginx
● nginx.service - The nginx HTTP and reverse proxy server
     Loaded: loaded (/usr/lib/systemd/system/nginx.service; disabled; preset: disabled)
     Active: active (running) since Fri 2025-08-22 20:10:17 UTC; 16s ago
    Process: 9362 ExecStartPre=/usr/bin/rm -f /run/nginx.pid (code=exited, status=0/SUCCESS)
    Process: 9363 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)
    Process: 9364 ExecStart=/usr/sbin/nginx (code=exited, status=0/SUCCESS)
   Main PID: 9365 (nginx)
      Tasks: 3 (limit: 11997)
     Memory: 2.9M
        CPU: 49ms
     CGroup: /system.slice/nginx.service
             ├─9365 "nginx: master process /usr/sbin/nginx"
             ├─9366 "nginx: worker process"
             └─9367 "nginx: worker process"

Aug 22 20:10:17 selinux systemd[1]: Starting The nginx HTTP and reverse proxy server...
Aug 22 20:10:17 selinux nginx[9363]: nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
Aug 22 20:10:17 selinux nginx[9363]: nginx: configuration file /etc/nginx/nginx.conf test is successful
Aug 22 20:10:17 selinux systemd[1]: Started The nginx HTTP and reverse proxy server.
Проверить статус параметра можно с помощью команды: getsebool -a | grep nis_enabled
[root@selinux audit]# getsebool -a | grep nis_enabled
nis_enabled --> on
Вернём запрет работы nginx на порту 4881 обратно. Для этого отключим nis_enabled: setsebool -P nis_enabled off
После отключения nis_enabled служба nginx снова не запустится.

Теперь разрешим в SELinux работу nginx на порту TCP 4881 c помощью добавления нестандартного порта в имеющийся тип:


